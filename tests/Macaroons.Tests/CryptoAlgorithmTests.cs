using System.Linq;
using Xunit;

namespace Macaroons.Tests
{
    public class CryptoAlgorithmTests
    {
        
        [Theory]
        [InlineData(
            "1efe4763f290dbce0c1d08477367e11f4eee456a64933cf662d79772dbb82128",
            "7b46b7aec0ea6cf4eaf4ed0b9855ab698837c6be0ba6883ec526f1c7b997afa8",
            "0000000000000000000000005c1ec23bc0be9eb02bf523fd748c01eb61746b03eee253c41e620f16eaebad9a1b084a657a9f1fe00f167d5a6e333097"
        )] // testcase generated by nsec build
        public void ShouldDecryptSameDataInBothBuilds1(string hexKey, string hexPlainText, string nonceAndMacAndCipherText)
        {
            var hex = new NBitcoin.DataEncoders.HexEncoder();
            var key = hex.DecodeData(hexKey);
            var plainText = hex.DecodeData(hexPlainText);
            var result = hex.DecodeData(nonceAndMacAndCipherText);
            var c = new ChaCha20Poly1305CryptoAlgorithm();
            var actualPlainText = c.Decrypt(key, result);
            Assert.Equal(hex.EncodeData(plainText), hex.EncodeData(actualPlainText));
        }
    }
}